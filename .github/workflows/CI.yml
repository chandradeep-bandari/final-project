name: CI - Test, Build and Push Docker Image

on:
  push:
    branches:
      - dev
      - main

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest

    - name: Run tests with pytest
      run: |
        pytest --maxfail=1 --disable-warnings -v
      # If tests fail, workflow stops here automatically

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image with tags
      run: |
        IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/salary-predictor
        SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
        docker build -t $IMAGE_NAME:latest \
                     -t $IMAGE_NAME:${{ github.ref_name }} \
                     -t $IMAGE_NAME:${{ github.ref_name }}-$SHORT_SHA .
        docker push $IMAGE_NAME:latest
        docker push $IMAGE_NAME:${{ github.ref_name }}
        docker push $IMAGE_NAME:${{ github.ref_name }}-$SHORT_SHA

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set GCP Project
      run: gcloud config set project vernal-surge-453410-r6

    - name: SSH and deploy (inline script)
      run: |
        gcloud compute ssh chandradeepbandari48@l00187658-dockernode \
          --zone=europe-west4-b \
          --command="cd /home/chandradeepbandari48/ && \
                     rm -rf final-project && \
                     git clone https://github.com/chandradeep-bandari/final-project.git && \
                     cd final-project && \
                     /usr/local/bin/minikube kubectl -- delete -f k8s-deployment.yaml || true && \
                     sleep 5 && \
                     /usr/local/bin/minikube kubectl -- apply -f k8s-deployment.yaml && \
                     /usr/local/bin/minikube kubectl -- apply -f k8s-service.yaml"
